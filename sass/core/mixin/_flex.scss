/* =========================================================
flex - flex関連の指定
========================================================= */

// ---------------------------------------------------------------
//  ■flexboxの指定
//  flexを使う場合は必ずflexboxかinline-flexを指定してください。
// ---------------------------------------------------------------

// ・flex こちらの方が使用頻度が高いです。
// --------------------
@mixin flexbox {
	display: -webkit-box;
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;
}

%flexbox { @include flexbox; }

// ・inline-flex インライン要素に使う場合はこちらを指定してください。
// --------------------
@mixin inline-flex {
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

%inline-flex { @include inline-flex; }


// ---------------------------------------------------------------
//  ■flex-direction (表示の方向)
//  row:左から右 | row-reverse:右から左 | column:上から下 | column-reverse:下から上
//  デフォルトはrowです。
// ---------------------------------------------------------------
@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
	} @else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
	} @else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
	} @else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
	}
	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}
// Shorter version:
@mixin flex-dir($args...) { @include flex-direction($args...); }


// ---------------------------------------------------------------
//  ■flex-wrap (折り返しの指定)
//  nowwrap:折り返しせず一行に | wrap:折り返して複数行に上から下へ | wrap-reverse:折り返して複数行に下から上へ
//  デフォルトはnowrapです。
// ---------------------------------------------------------------
@mixin flex-wrap($value: nowrap) {
	// No Webkit Box fallback.
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;
	@if $value == nowrap {
		-ms-flex-wrap: none;
	} @else { 
		-ms-flex-wrap: $value; 
	}
	flex-wrap: $value;
}


// ---------------------------------------------------------------
//  ■flex-flow (ショートハンド)
//  flex-directionとflex-wrapをまとめて指定できます。
// ---------------------------------------------------------------

@mixin flex-flow($values: (row nowrap)) {
	// No Webkit Box fallback.
	-webkit-flex-flow: $values;
	-moz-flex-flow: $values;
	-ms-flex-flow: $values;
	flex-flow: $values;
}


// ---------------------------------------------------------------
//  ■order (順序の指定)
//  デフォルトは0です。
// ---------------------------------------------------------------
@mixin order($int: 0) {
	-webkit-box-ordinal-group: $int + 1;
	-webkit-order: $int;
	-moz-order: $int;
	-ms-flex-order: $int;
	order: $int;
}


// ---------------------------------------------------------------
//  ■flex-glow (子要素の伸びる比率)
//  デフォルトは0です。
// ---------------------------------------------------------------
@mixin flex-grow($int: 0) {
	-webkit-box-flex: $int;
	-webkit-flex-grow: $int;
	-moz-flex-grow: $int;
	-ms-flex-positive: $int;
	flex-grow: $int;
}


// ---------------------------------------------------------------
//  ■flex-shrink (子要素の縮む比率)
//  デフォルトは1です。
// ---------------------------------------------------------------
@mixin flex-shrink($int: 1) {
	-webkit-flex-shrink: $int;
	-moz-flex-shrink: $int;
	-ms-flex-negative: $int;
	flex-shrink: $int;
}


// ---------------------------------------------------------------
//  ■flex-basis (子要素のベースとなる幅の指定)
//  子要素に対しwidthと同じように幅の値を指定できます。
//  autoと指定した場合は子要素のコンテンツのサイズが適応されます。
//  デフォルトはautoです。
// ---------------------------------------------------------------
@mixin flex-basis($value: auto) {
	-webkit-flex-basis: $value;
	-moz-flex-basis: $value;
	-ms-flex-preferred-size: $value;
	flex-basis: $value;
}


// ---------------------------------------------------------------
//  ■flex (ショートハンド)
//   flex-grow、flex-shrink、flex-basisをまとめて指定
//  デフォルトは1 1 0です。
// ---------------------------------------------------------------
@mixin flex($fg: 1, $fs: null, $fb: null) {

	// Set a variable to be used by box-flex properties
	$fg-boxflex: $fg;

	// Box-Flex only supports a flex-grow value so let's grab the
	// first item in the list and just return that.
	@if type-of($fg) == 'list' {
		$fg-boxflex: nth($fg, 1);
	}

	-webkit-box-flex: $fg-boxflex;
	-webkit-flex: $fg $fs $fb;
	-moz-box-flex: $fg-boxflex;
	-moz-flex: $fg $fs $fb;
	-ms-flex: $fg $fs $fb;
	flex: $fg $fs $fb;
}


// ---------------------------------------------------------------
//  ■Justisy-content (水平方向の揃え)
//  flex-start:左揃え | flex-end:右揃え | center:中央揃え | space-between:等間隔で配置 | space-around:両端に隙間を空けて等間隔に配置
//  デフォルトはflex-startです。
// ---------------------------------------------------------------
@mixin justify-content($value: flex-start) {
	@if $value == flex-start {
		-webkit-box-pack: start;
		-ms-flex-pack: start;
	} @else if $value == flex-end {
		-webkit-box-pack: end;
		-ms-flex-pack: end;
	} @else if $value == space-between {
		-webkit-box-pack: justify;
		-ms-flex-pack: justify;
	} @else if $value == space-around {
		-ms-flex-pack: distribute;		
	} @else {
		-webkit-box-pack: $value;
		-ms-flex-pack: $value;
	}
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}
// Shorter version:
@mixin flex-just($args...) { @include justify-content($args...); }


// ---------------------------------------------------------------
//  ■align-items (垂直方向の揃え)
//  flex-start:上揃え | flex-end:下揃え | center:中央揃え | baseline:ベースラインに揃える | stretch:高さに合わせて広げる
//  デフォルトはstretchです。
// ---------------------------------------------------------------
@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}


// ---------------------------------------------------------------
//  ■align-self (子要素の垂直方向の揃え)
//  auto:親要素の値を継承 | stretch:高さに合わせて広げる | flex-start:上揃え | flex-end:下揃え | center:中央揃え | baseline:ベースラインに揃える
//  デフォルトはautoです。
// ---------------------------------------------------------------
@mixin align-self($value: auto) {
	// No Webkit Box Fallback.
	-webkit-align-self: $value;
	-moz-align-self: $value;
	@if $value == flex-start {
		-ms-flex-item-align: start;
	} @else if $value == flex-end {
		-ms-flex-item-align: end;
	} @else {
		-ms-flex-item-align: $value;
	}
	align-self: $value;
}


// ---------------------------------------------------------------
//  ■align-content (複数行にした時の揃え)
//  stretch:高さに合わせて広げる | flex-start:上揃え | flex-end:下揃え | center:中央揃え | space-between:等間隔で配置 | space-around:両端に隙間を空けて等間隔に配置
//  デフォルトはstretchです。
// ---------------------------------------------------------------
@mixin align-content($value: stretch) {
	// No Webkit Box Fallback.
	-webkit-align-content: $value;
	-moz-align-content: $value;
	@if $value == flex-start {
		-ms-flex-line-pack: start;
	} @else if $value == flex-end {
		-ms-flex-line-pack: end;
	} @else {
		-ms-flex-line-pack: $value;
	}
	align-content: $value;
}


// ---------------------------------------------------------------
//  ■flex-center (上下左右中央配置)
//  指定すると子要素が親要素の上下左右中心に来ます。
// ---------------------------------------------------------------
@mixin flex-center {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
}